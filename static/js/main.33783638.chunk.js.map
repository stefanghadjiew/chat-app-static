{"version":3,"sources":["NavbarItem.js","Navbar.js","Message.js","Messages.js","Home.js","Authentication.js","Main.js","App.js","index.js"],"names":["NavbarItem","btnText","logout","className","to","Tooltip","title","IconButton","color","VpnKeyRounded","LockOpenRounded","HomeRounded","onClick","ClearRounded","Navbar","isLogged","username","SendRounded","Avatar","alt","style","margin","backgroundColor","display","Message","text","userName","messageId","userId","width","borderRadius","padding","Messages","token","search","id","useState","messages","setMessages","useEffect","a","url","fetch","method","headers","res","json","console","log","fetchMessages","animateScroll","scrollToBottom","containerId","map","m","key","_id","user","Home","setText","setSearch","handleSubmit","e","preventDefault","body","JSON","stringify","Button","height","variant","onSubmit","type","value","placeholder","onChange","target","initialState","email","password","Authentication","register","submitBtnText","userIsLogged","history","state","setState","has","msg","err","setErr","handleChange","currentTarget","name","userInfo","message","push","listen","MessageRounded","fontSize","PeopleAltRounded","Alert","severity","TextField","required","label","marginTop","Main","exact","path","render","props","App","isUserLogged","setIsUserLogged","dataFromAuth","boolean","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33783638.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { VpnKeyRounded,LockOpenRounded,HomeRounded,ClearRounded} from \"@material-ui/icons\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\nimport { Link } from \"react-router-dom\"; \r\n\r\n \r\n\r\nconst NavbarItem = ({btnText,logout}) => {\r\n    if(btnText === \"Login\") {\r\n        return (\r\n            <li className=\"navbar-nav-item\">\r\n                <Link to=\"/login\">\r\n                    <Tooltip title={btnText} >\r\n                        <IconButton color=\"secondary\">\r\n                            <VpnKeyRounded className=\"navbar_icon_btn\" color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n    if (btnText === \"Register\") {\r\n        return (\r\n            <li className=\"navbar-nav-item\">\r\n                <Link to=\"/register\">\r\n                    <Tooltip title={btnText} >\r\n                        <IconButton color=\"secondary\">\r\n                            <LockOpenRounded className=\"navbar_icon_btn\" color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n    if (btnText === \"Home\") {\r\n        return (\r\n            <li className=\"navbar-nav-item\">\r\n                <Link to=\"/\">\r\n                    <Tooltip title={btnText} >\r\n                        <IconButton color=\"secondary\">\r\n                            <HomeRounded className=\"navbar_icon_btn\" color=\"secondary\"/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n    if (btnText === \"Logout\") {\r\n        return (\r\n            <li className=\"navbar-nav-item\">\r\n                <Tooltip title={btnText} >\r\n                    <IconButton color=\"secondary\" onClick={logout}>\r\n                        <ClearRounded className=\"navbar_icon_btn\" color=\"secondary\"/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </li>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default NavbarItem;","import React from \"react\";\r\nimport NavbarItem from \"./NavbarItem\";\r\nimport { SendRounded } from \"@material-ui/icons\";\r\nimport Avatar  from \"@material-ui/core/Avatar\";\r\n\r\n\r\nconst Navbar = ({isLogged,logout,username}) => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <ul className=\"logo\">\r\n                <SendRounded className=\"navbar_icon_btn\"/>\r\n                <SendRounded className=\"navbar_icon_btn\"/>\r\n                ArrowMessage\r\n                <SendRounded className=\"navbar_icon_btn\"/>\r\n            </ul>\r\n                {(isLogged === true) &&(\r\n                    <div className=\"avatar\">\r\n                        <Avatar \r\n                        alt={username}\r\n                        className=\"avatar-icon\"\r\n                        style={{margin:\"1rem\",backgroundColor:\"#f50057\",color:\"#2d3436\"}}/>\r\n                        {username}\r\n                    </div>\r\n                )}\r\n           \r\n            <ul className=\"navbar-nav\">\r\n                <NavbarItem  btnText=\"Home\"/>\r\n                {(isLogged === false) && (\r\n                <div style={{display:\"flex\"}}>\r\n                    <NavbarItem  btnText=\"Login\"/>\r\n                    <NavbarItem  btnText=\"Register\"/>\r\n                </div>\r\n                )}\r\n                {(isLogged === true) && (\r\n                    <NavbarItem btnText=\"Logout\"  logout={logout}/>\r\n                )}\r\n             </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst Message = ({text,userName,messageId,userId}) => {\r\n    return (\r\n        <div style={{margin:\"1rem\",display: \"flex\",width:\"fit-content\"}}>\r\n            {(messageId === userId) && (\r\n                 <span style={{backgroundColor:\"#f50057\",color:\" #2d3436\",borderRadius:\"5px\",padding:\"0.7rem\"}}>  \r\n                 {userName} - {text} \r\n           </span>\r\n            )}\r\n            {(messageId !== userId) && (\r\n                 <span style={{backgroundColor:\" #2d3436\",color:\"#f50057\",borderRadius:\"5px\",padding:\"0.7rem\"}}>  \r\n                 {userName} - {text} \r\n           </span>\r\n            )} \r\n         \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Message;","import React, { useState,useEffect } from \"react\";\r\nimport Message from \"./Message\";\r\nimport { animateScroll } from \"react-scroll\";\r\nconst Messages = ({token,search,id,userId}) => {\r\n    const [messages,setMessages] = useState([]);\r\n    const herokuApi = \"https://serene-anchorage-94249.herokuapp.com/\"\r\n    const scrollToBottom = () => {animateScroll.scrollToBottom({containerId:`${id}`})}\r\n    \r\n    useEffect( () => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const url = `${herokuApi}api/all`\r\n                const res = await fetch(url,{\r\n                    method : \"GET\",\r\n                    headers : {\r\n                        \"Content-type\" : \"application/json\",\r\n                        \"Authorization\" : `Bearer ${token}`\r\n                    }\r\n                    })\r\n                const messages = await res.json()\r\n                setMessages(messages);\r\n            } catch(err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchMessages();\r\n        scrollToBottom();\r\n    },[search]);\r\n\r\n    \r\n\r\nreturn (\r\n     messages.map(m => (\r\n        <Message\r\n        userId={userId} \r\n        key={m._id}\r\n        text={m.text}\r\n        messageId={m.user._id}\r\n        userName = {m.user.username}\r\n    />\r\n))     \r\n        \r\n    )\r\n}\r\n\r\nexport default Messages;","import React,{ useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Messages from \"./Messages\";\r\n\r\n\r\nconst Home = ({ isLogged,token,userId }) => {\r\n    const herokuApi = \"https://serene-anchorage-94249.herokuapp.com/\"\r\n    const [text,setText] = useState({\r\n        text: \"\",\r\n    })\r\n\r\n    const [search,setSearch] = useState('');\r\n    \r\n    const handleChange = (e) => {\r\n        setText({\r\n            text : e.target.value,\r\n        })\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const url = `${herokuApi}api/user/${userId}/messages`\r\n            const res = await fetch(url,{\r\n                method : \"POST\",\r\n                headers: {\r\n                    \"Content-type\" : \"application/json\",\r\n                    \"Authorization\" : `Bearer ${token}` \r\n                },\r\n                body : JSON.stringify(search)\r\n            })\r\n            setText({text: \"\"})\r\n            setSearch('')\r\n        } catch(err) {\r\n            console.log(err)\r\n        }\r\n    } \r\n\r\n    if (isLogged === false) {\r\n        return (\r\n            <div className=\"form-container\">\r\n                <div className=\"form_container_inner\">\r\n                    <h1>ArrowMessage Desktop</h1>\r\n                    <h3>Welcome to the official ArrowMessage Desktop app.</h3>\r\n                    <h3>Its fast and secure.</h3>\r\n                    <Link to=\"/login\">\r\n                        <Button\r\n                            style={{width:\"50%\",height:60}}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\">START MESSAGING\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    if(isLogged === true) {\r\n        return (\r\n            <div className=\"chat_friends_container\">\r\n                <div className=\"chat_box\" id=\"chat_box\">\r\n                    <div className=\"message_display\">\r\n                        <Messages userId={userId} id=\"messages\" search={search} token={token}/>\r\n                    </div>\r\n                    <div className=\"message_form_container\">\r\n                        <form className=\"message_form\" onSubmit={handleSubmit}>\r\n                            <input \r\n                                type=\"text\" \r\n                                value={text.text}\r\n                                placeholder=\"Write a message...\" \r\n                                onChange={handleChange}\r\n                            />\r\n                            <button \r\n                                style={{display:\"none\"}}\r\n                                onClick={()=>setSearch(text)}>\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}   \r\n\r\nexport default Home;","import React , { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport { MessageRounded,PeopleAltRounded,} from \"@material-ui/icons\"\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Alert from \"@material-ui/lab/Alert\"\r\n\r\n\r\nconst initialState = {\r\n    username :\"\",\r\n    email:\"\",\r\n    password:\"\",\r\n    \r\n}\r\n\r\n\r\nconst Authentication = ({register,submitBtnText,userIsLogged,history,...props}) => {\r\n    const herokuApi = \"https://serene-anchorage-94249.herokuapp.com/\" \r\n    const [state,setState] = useState(initialState)\r\n    const [err,setErr] = useState({\r\n        has:false,\r\n        msg:\"\"\r\n    })\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.currentTarget.name] : e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    const returnToInitialState = () => {\r\n        setState(initialState)\r\n    }\r\n   \r\n    const handleSubmit = async (e) => {\r\n       e.preventDefault()\r\n       \r\n            const url = `${herokuApi}api/auth/${submitBtnText}`\r\n            const res = await fetch(url,{\r\n                method : \"POST\",\r\n                headers : {\r\n                    \"Content-type\" : \"application/json\",\r\n                    },\r\n                body:JSON.stringify(state)\r\n            })\r\n            const userInfo = await res.json()\r\n            if(userInfo.err) {\r\n                userIsLogged({},false)\r\n                setErr({has:true,msg:userInfo.err.message})\r\n            } else {\r\n                userIsLogged(userInfo,true);\r\n                returnToInitialState();\r\n                history.push(\"/\")\r\n            }\r\n           \r\n        } \r\n\r\n    history.listen(()=> {\r\n        setErr({has:false,msg:\"\"})\r\n        setState(initialState)\r\n    })   \r\n   \r\n    const {username,email,password} = state \r\n    \r\n    return (\r\n        <div className=\"form-container\">\r\n            <div className=\"user_greeting\">\r\n                {register && (\r\n                    <div className=\"user_greeting_register\">\r\n                        <MessageRounded style={{fontSize:100,color:\"#f50057\"}}/>\r\n                        <h1>Happy to have you join our family!</h1>\r\n                    </div>\r\n                   \r\n                )}\r\n                {!register && (\r\n                    <div className=\"user_greeting_register\">\r\n                        <PeopleAltRounded style={{fontSize:100,color:\"#f50057\"}}/>\r\n                        <h1>Lets start chatting</h1>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                {err.has === true && (\r\n                    <Alert variant=\"filled\" severity=\"error\" style={{margin:\"0.5rem\"}}>\r\n                        {err.msg}\r\n                    </Alert>\r\n                )}\r\n                <TextField\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    required={true}\r\n                    label=\"email\" \r\n                    variant=\"outlined\" \r\n                    value={email} \r\n                    onChange={handleChange}\r\n                />\r\n                <TextField\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    required={true}\r\n                    label=\"password\" \r\n                    variant=\"outlined\" \r\n                    value={password} \r\n                    onChange={handleChange}\r\n                />\r\n                {register && (\r\n                    <div className=\"register\">\r\n                        <TextField\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            required={true}\r\n                            label=\"username\" \r\n                            variant=\"outlined\" \r\n                            value={username} \r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n                )}\r\n                <Button\r\n                style={{marginTop:\"0.5rem\",height:\"60px\"}} \r\n                variant=\"contained\" \r\n                color=\"secondary\" \r\n                type=\"submit\"\r\n                >\r\n                    <span className=\"submit\">{submitBtnText}</span>\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authentication;\r\n","import React from \"react\";\r\nimport { Switch,Route } from \"react-router-dom\";\r\nimport Home from \"./Home\" \r\nimport Authentication from \"./Authentication\"\r\n\r\nconst Main = ({ isLogged,userIsLogged,token,userId }) => {\r\n    return(\r\n        <Switch>\r\n        <Route exact path=\"/\" render={props => \r\n        <Home \r\n            token={token} \r\n            userId={userId} \r\n            isLogged={isLogged} \r\n            {...props}\r\n        />}/>\r\n        <Route exact path=\"/login\" render={props => \r\n        <Authentication  \r\n            submitBtnText=\"login\" \r\n            userIsLogged={userIsLogged} \r\n            {...props}\r\n        />}/>\r\n        <Route exact path=\"/register\" render={props => \r\n        <Authentication  \r\n            register  \r\n            submitBtnText=\"register\"  \r\n            userIsLogged={userIsLogged} \r\n            {...props}\r\n        />}/>\r\n    </Switch>\r\n    )\r\n  \r\n}\r\n\r\nexport default Main;","import React,{ useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Navbar from \"./Navbar\";\nimport Main from \"./Main\";\n\n\nfunction App() {\n  const [isUserLogged,setIsUserLogged] = useState({\n    user: {},\n    isLogged : false,\n  })\n  \n  const logout = () => {\n    setIsUserLogged({\n      user:{},\n      isLogged:false,\n     })\n  }\n  \n  const userIsLogged = (dataFromAuth,boolean) => {\n    setIsUserLogged({\n      user:dataFromAuth,\n      isLogged:boolean,\n      \n    })\n  }\n  \n\n  return (\n    <Router>\n      <Navbar\n      userId={isUserLogged.user.id}\n      token ={isUserLogged.user.token} \n      isLogged={isUserLogged.isLogged} \n      username={isUserLogged.user.username} \n      logout={logout}\n      />\n      <Main\n      userId = {isUserLogged.user.id}\n      token ={isUserLogged.user.token} \n      isLogged={isUserLogged.isLogged} \n      userIsLogged={userIsLogged}/>\n    </Router>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App className=\"App\"/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}